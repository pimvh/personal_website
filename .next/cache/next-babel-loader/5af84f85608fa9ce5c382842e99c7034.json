{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/superpim/Documents/personalwebsite-next/pages/contact.js\";\nimport React from \"react\";\nimport Layout from '../components/MyLayout.js';\nimport { Form, FormGroup, Label, Input, FormText, Button, FormFeedback } from 'reactstrap';\n\nvar Contact =\n/*#__PURE__*/\nfunction () {\n  function Contact() {\n    var _this = this;\n\n    _classCallCheck(this, Contact);\n\n    _defineProperty(this, \"handleChange\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var target, value, name;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                target = event.target;\n                value = target.type === 'checkbox' ? target.checked : target.value;\n                name = target.name;\n                _context.next = 5;\n                return _this.setState(_defineProperty({}, name, value));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  }\n\n  _createClass(Contact, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n      React.createElement(Layout, {\n        title: \"Contact\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(Form, {\n        className: \"form\",\n        onSubmit: function onSubmit(e) {\n          return _this2.submitForm(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(Label, {\n        \"for\": \"exampleEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, \"Email\"), React.createElement(Input, {\n        type: \"email\",\n        name: \"email\",\n        id: \"exampleEmail\",\n        placeholder: \"iemand@iets.nl\",\n        valid: this.state.validate.emailState === 'has-success',\n        invalid: this.state.validate.emailState === 'has-danger',\n        onChange: function onChange(e) {\n          _this2.validateEmail(e);\n\n          _this2.handleChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        valid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"That's a tasty looking email you've got there.\"), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Uh oh! Looks like there is an issue with your email. Please input a correct email.\"), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Your username is most likely your email.\")), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Label, {\n        \"for\": \"exampleText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Text Area\"), React.createElement(Input, {\n        type: \"textarea\",\n        name: \"text\",\n        id: \"exampleText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }, {\n    key: \"validateEmail\",\n    value: function validateEmail(e) {\n      var emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      var validate = this.state.validate;\n\n      if (emailRex.test(e.target.value)) {\n        validate.emailState = 'has-success';\n      } else {\n        validate.emailState = 'has-danger';\n      }\n\n      this.setState({\n        validate: validate\n      });\n    }\n  }, {\n    key: \"submitForm\",\n    value: function submitForm(e) {\n      e.preventDefault();\n      console.log(\"Email: \".concat(this.state.email));\n    }\n  }]);\n\n  return Contact;\n}();","map":{"version":3,"sources":["/home/superpim/Documents/personalwebsite-next/pages/contact.js"],"names":["Layout","Form","FormGroup","Label","Input","FormText","Button","FormFeedback","Contact","event","target","value","type","checked","name","setState","state","email","password","e","submitForm","validate","emailState","validateEmail","handleChange","emailRex","test","preventDefault","console","log"],"mappings":"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","sourcesContent":["import Layout from '../components/MyLayout.js'\nimport { Form, FormGroup, Label, Input, FormText, Button, FormFeedback} from 'reactstrap'\n\n\nclass Contact {\n\n    render(){\n        const { email, password } = this.state;\n        <Layout title='Contact'>\n        <Form className=\"form\" onSubmit={ (e) => this.submitForm(e)}>\n            <FormGroup>\n            <Label for=\"exampleEmail\">Email</Label>\n            <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"iemand@iets.nl\"\n            valid={ this.state.validate.emailState === 'has-success' }\n            invalid={ this.state.validate.emailState === 'has-danger' }\n            onChange={ (e) => {\n                this.validateEmail(e)\n                this.handleChange(e)\n            } } />\n\n            <FormFeedback valid>\n                That's a tasty looking email you've got there.\n            </FormFeedback>\n            <FormFeedback>\n                Uh oh! Looks like there is an issue with your email. Please input a correct email.\n            </FormFeedback>\n\n            <FormText>Your username is most likely your email.</FormText>\n\n            </FormGroup>\n            <FormGroup>\n            <Label for=\"exampleText\">Text Area</Label>\n            <Input type=\"textarea\" name=\"text\" id=\"exampleText\" />\n            </FormGroup>\n            <Button>Submit</Button>\n        </Form>\n        </Layout>\n    }\n\nvalidateEmail(e) {\n    const emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const { validate } = this.state\n    if (emailRex.test(e.target.value)) {\n        validate.emailState = 'has-success'\n    } else {\n        validate.emailState = 'has-danger'\n    }\n    this.setState({ validate })\n}\n\n\nhandleChange = async (event) => {\n    const { target } = event;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const { name } = target;\n    await this.setState({\n        [ name ]: value,\n    });\n}\n\nsubmitForm(e) {\n  e.preventDefault();\n  console.log(`Email: ${ this.state.email }`)\n}\n\n}\n"]},"metadata":{},"sourceType":"module"}